// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="krnl_vmul_krnl_vmul,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=147,HLS_SYN_TPT=81,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=3286,HLS_SYN_LUT=4319,HLS_VERSION=2024_2}" *)

module krnl_vmul (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire   [63:0] A;
wire   [63:0] B;
wire   [63:0] out_r;
wire   [31:0] size;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire    gmem0_0_AWREADY;
wire    gmem0_0_WREADY;
wire    gmem0_0_ARREADY;
wire    gmem0_0_RVALID;
wire   [31:0] gmem0_0_RDATA;
wire    gmem0_0_RLAST;
wire   [0:0] gmem0_0_RID;
wire   [8:0] gmem0_0_RFIFONUM;
wire   [0:0] gmem0_0_RUSER;
wire   [1:0] gmem0_0_RRESP;
wire    gmem0_0_BVALID;
wire    gmem1_0_AWREADY;
wire    gmem1_0_WREADY;
wire    gmem1_0_ARREADY;
wire    gmem1_0_RVALID;
wire   [31:0] gmem1_0_RDATA;
wire    gmem1_0_RLAST;
wire   [0:0] gmem1_0_RID;
wire   [8:0] gmem1_0_RFIFONUM;
wire   [0:0] gmem1_0_RUSER;
wire   [1:0] gmem1_0_RRESP;
wire    gmem1_0_BVALID;
wire    gmem2_0_AWREADY;
wire    gmem2_0_WREADY;
wire    gmem2_0_ARREADY;
wire    gmem2_0_RVALID;
wire   [31:0] gmem2_0_RDATA;
wire   [8:0] gmem2_0_RFIFONUM;
wire    gmem2_0_BVALID;
wire   [1:0] gmem2_0_BRESP;
wire   [0:0] gmem2_0_BID;
wire   [0:0] gmem2_0_BUSER;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [63:0] entry_proc_U0_out_r_c_din;
wire    entry_proc_U0_out_r_c_write;
wire    load_input_U0_ap_start;
wire    load_input_U0_ap_done;
wire    load_input_U0_ap_continue;
wire    load_input_U0_ap_idle;
wire    load_input_U0_ap_ready;
wire    load_input_U0_start_out;
wire    load_input_U0_start_write;
wire    load_input_U0_m_axi_gmem0_0_AWVALID;
wire   [63:0] load_input_U0_m_axi_gmem0_0_AWADDR;
wire   [0:0] load_input_U0_m_axi_gmem0_0_AWID;
wire   [31:0] load_input_U0_m_axi_gmem0_0_AWLEN;
wire   [2:0] load_input_U0_m_axi_gmem0_0_AWSIZE;
wire   [1:0] load_input_U0_m_axi_gmem0_0_AWBURST;
wire   [1:0] load_input_U0_m_axi_gmem0_0_AWLOCK;
wire   [3:0] load_input_U0_m_axi_gmem0_0_AWCACHE;
wire   [2:0] load_input_U0_m_axi_gmem0_0_AWPROT;
wire   [3:0] load_input_U0_m_axi_gmem0_0_AWQOS;
wire   [3:0] load_input_U0_m_axi_gmem0_0_AWREGION;
wire   [0:0] load_input_U0_m_axi_gmem0_0_AWUSER;
wire    load_input_U0_m_axi_gmem0_0_WVALID;
wire   [31:0] load_input_U0_m_axi_gmem0_0_WDATA;
wire   [3:0] load_input_U0_m_axi_gmem0_0_WSTRB;
wire    load_input_U0_m_axi_gmem0_0_WLAST;
wire   [0:0] load_input_U0_m_axi_gmem0_0_WID;
wire   [0:0] load_input_U0_m_axi_gmem0_0_WUSER;
wire    load_input_U0_m_axi_gmem0_0_ARVALID;
wire   [63:0] load_input_U0_m_axi_gmem0_0_ARADDR;
wire   [0:0] load_input_U0_m_axi_gmem0_0_ARID;
wire   [31:0] load_input_U0_m_axi_gmem0_0_ARLEN;
wire   [2:0] load_input_U0_m_axi_gmem0_0_ARSIZE;
wire   [1:0] load_input_U0_m_axi_gmem0_0_ARBURST;
wire   [1:0] load_input_U0_m_axi_gmem0_0_ARLOCK;
wire   [3:0] load_input_U0_m_axi_gmem0_0_ARCACHE;
wire   [2:0] load_input_U0_m_axi_gmem0_0_ARPROT;
wire   [3:0] load_input_U0_m_axi_gmem0_0_ARQOS;
wire   [3:0] load_input_U0_m_axi_gmem0_0_ARREGION;
wire   [0:0] load_input_U0_m_axi_gmem0_0_ARUSER;
wire    load_input_U0_m_axi_gmem0_0_RREADY;
wire    load_input_U0_m_axi_gmem0_0_BREADY;
wire   [31:0] load_input_U0_size_c_din;
wire    load_input_U0_size_c_write;
wire   [31:0] load_input_U0_inStream_A_din;
wire    load_input_U0_inStream_A_write;
wire    load_input_1_U0_ap_start;
wire    load_input_1_U0_ap_done;
wire    load_input_1_U0_ap_continue;
wire    load_input_1_U0_ap_idle;
wire    load_input_1_U0_ap_ready;
wire    load_input_1_U0_m_axi_gmem1_0_AWVALID;
wire   [63:0] load_input_1_U0_m_axi_gmem1_0_AWADDR;
wire   [0:0] load_input_1_U0_m_axi_gmem1_0_AWID;
wire   [31:0] load_input_1_U0_m_axi_gmem1_0_AWLEN;
wire   [2:0] load_input_1_U0_m_axi_gmem1_0_AWSIZE;
wire   [1:0] load_input_1_U0_m_axi_gmem1_0_AWBURST;
wire   [1:0] load_input_1_U0_m_axi_gmem1_0_AWLOCK;
wire   [3:0] load_input_1_U0_m_axi_gmem1_0_AWCACHE;
wire   [2:0] load_input_1_U0_m_axi_gmem1_0_AWPROT;
wire   [3:0] load_input_1_U0_m_axi_gmem1_0_AWQOS;
wire   [3:0] load_input_1_U0_m_axi_gmem1_0_AWREGION;
wire   [0:0] load_input_1_U0_m_axi_gmem1_0_AWUSER;
wire    load_input_1_U0_m_axi_gmem1_0_WVALID;
wire   [31:0] load_input_1_U0_m_axi_gmem1_0_WDATA;
wire   [3:0] load_input_1_U0_m_axi_gmem1_0_WSTRB;
wire    load_input_1_U0_m_axi_gmem1_0_WLAST;
wire   [0:0] load_input_1_U0_m_axi_gmem1_0_WID;
wire   [0:0] load_input_1_U0_m_axi_gmem1_0_WUSER;
wire    load_input_1_U0_m_axi_gmem1_0_ARVALID;
wire   [63:0] load_input_1_U0_m_axi_gmem1_0_ARADDR;
wire   [0:0] load_input_1_U0_m_axi_gmem1_0_ARID;
wire   [31:0] load_input_1_U0_m_axi_gmem1_0_ARLEN;
wire   [2:0] load_input_1_U0_m_axi_gmem1_0_ARSIZE;
wire   [1:0] load_input_1_U0_m_axi_gmem1_0_ARBURST;
wire   [1:0] load_input_1_U0_m_axi_gmem1_0_ARLOCK;
wire   [3:0] load_input_1_U0_m_axi_gmem1_0_ARCACHE;
wire   [2:0] load_input_1_U0_m_axi_gmem1_0_ARPROT;
wire   [3:0] load_input_1_U0_m_axi_gmem1_0_ARQOS;
wire   [3:0] load_input_1_U0_m_axi_gmem1_0_ARREGION;
wire   [0:0] load_input_1_U0_m_axi_gmem1_0_ARUSER;
wire    load_input_1_U0_m_axi_gmem1_0_RREADY;
wire    load_input_1_U0_m_axi_gmem1_0_BREADY;
wire   [31:0] load_input_1_U0_inStream_B_din;
wire    load_input_1_U0_inStream_B_write;
wire    execute_U0_ap_start;
wire    execute_U0_ap_done;
wire    execute_U0_ap_continue;
wire    execute_U0_ap_idle;
wire    execute_U0_ap_ready;
wire    execute_U0_size_read;
wire    execute_U0_inStream_A_read;
wire    execute_U0_inStream_B_read;
wire   [31:0] execute_U0_outStream_din;
wire    execute_U0_outStream_write;
wire    store_output_U0_ap_start;
wire    store_output_U0_ap_done;
wire    store_output_U0_ap_continue;
wire    store_output_U0_ap_idle;
wire    store_output_U0_ap_ready;
wire    store_output_U0_m_axi_gmem2_0_AWVALID;
wire   [63:0] store_output_U0_m_axi_gmem2_0_AWADDR;
wire   [0:0] store_output_U0_m_axi_gmem2_0_AWID;
wire   [31:0] store_output_U0_m_axi_gmem2_0_AWLEN;
wire   [2:0] store_output_U0_m_axi_gmem2_0_AWSIZE;
wire   [1:0] store_output_U0_m_axi_gmem2_0_AWBURST;
wire   [1:0] store_output_U0_m_axi_gmem2_0_AWLOCK;
wire   [3:0] store_output_U0_m_axi_gmem2_0_AWCACHE;
wire   [2:0] store_output_U0_m_axi_gmem2_0_AWPROT;
wire   [3:0] store_output_U0_m_axi_gmem2_0_AWQOS;
wire   [3:0] store_output_U0_m_axi_gmem2_0_AWREGION;
wire   [0:0] store_output_U0_m_axi_gmem2_0_AWUSER;
wire    store_output_U0_m_axi_gmem2_0_WVALID;
wire   [31:0] store_output_U0_m_axi_gmem2_0_WDATA;
wire   [3:0] store_output_U0_m_axi_gmem2_0_WSTRB;
wire    store_output_U0_m_axi_gmem2_0_WLAST;
wire   [0:0] store_output_U0_m_axi_gmem2_0_WID;
wire   [0:0] store_output_U0_m_axi_gmem2_0_WUSER;
wire    store_output_U0_m_axi_gmem2_0_ARVALID;
wire   [63:0] store_output_U0_m_axi_gmem2_0_ARADDR;
wire   [0:0] store_output_U0_m_axi_gmem2_0_ARID;
wire   [31:0] store_output_U0_m_axi_gmem2_0_ARLEN;
wire   [2:0] store_output_U0_m_axi_gmem2_0_ARSIZE;
wire   [1:0] store_output_U0_m_axi_gmem2_0_ARBURST;
wire   [1:0] store_output_U0_m_axi_gmem2_0_ARLOCK;
wire   [3:0] store_output_U0_m_axi_gmem2_0_ARCACHE;
wire   [2:0] store_output_U0_m_axi_gmem2_0_ARPROT;
wire   [3:0] store_output_U0_m_axi_gmem2_0_ARQOS;
wire   [3:0] store_output_U0_m_axi_gmem2_0_ARREGION;
wire   [0:0] store_output_U0_m_axi_gmem2_0_ARUSER;
wire    store_output_U0_m_axi_gmem2_0_RREADY;
wire    store_output_U0_m_axi_gmem2_0_BREADY;
wire    store_output_U0_out_r_read;
wire    store_output_U0_outStream_read;
wire    out_r_c_full_n;
wire   [63:0] out_r_c_dout;
wire    out_r_c_empty_n;
wire   [2:0] out_r_c_num_data_valid;
wire   [2:0] out_r_c_fifo_cap;
wire    size_c_full_n;
wire   [31:0] size_c_dout;
wire    size_c_empty_n;
wire   [2:0] size_c_num_data_valid;
wire   [2:0] size_c_fifo_cap;
wire    inStream_A_full_n;
wire   [31:0] inStream_A_dout;
wire    inStream_A_empty_n;
wire   [2:0] inStream_A_num_data_valid;
wire   [2:0] inStream_A_fifo_cap;
wire    inStream_B_full_n;
wire   [31:0] inStream_B_dout;
wire    inStream_B_empty_n;
wire   [2:0] inStream_B_num_data_valid;
wire   [2:0] inStream_B_fifo_cap;
wire    outStream_full_n;
wire   [31:0] outStream_dout;
wire    outStream_empty_n;
wire   [2:0] outStream_num_data_valid;
wire   [2:0] outStream_fifo_cap;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_load_input_U0_ap_ready;
wire    ap_sync_load_input_U0_ap_ready;
reg    ap_sync_reg_load_input_1_U0_ap_ready;
wire    ap_sync_load_input_1_U0_ap_ready;
wire   [0:0] start_for_store_output_U0_din;
wire    start_for_store_output_U0_full_n;
wire   [0:0] start_for_store_output_U0_dout;
wire    start_for_store_output_U0_empty_n;
wire   [0:0] start_for_execute_U0_din;
wire    start_for_execute_U0_full_n;
wire   [0:0] start_for_execute_U0_dout;
wire    start_for_execute_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_load_input_U0_ap_ready = 1'b0;
#0 ap_sync_reg_load_input_1_U0_ap_ready = 1'b0;
end

krnl_vmul_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .A(A),
    .B(B),
    .out_r(out_r),
    .size(size),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

krnl_vmul_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 70 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 0 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(load_input_U0_m_axi_gmem0_0_ARVALID),
    .I_CH0_ARREADY(gmem0_0_ARREADY),
    .I_CH0_ARADDR(load_input_U0_m_axi_gmem0_0_ARADDR),
    .I_CH0_ARLEN(load_input_U0_m_axi_gmem0_0_ARLEN),
    .I_CH0_RVALID(gmem0_0_RVALID),
    .I_CH0_RREADY(load_input_U0_m_axi_gmem0_0_RREADY),
    .I_CH0_RDATA(gmem0_0_RDATA),
    .I_CH0_RFIFONUM(gmem0_0_RFIFONUM),
    .I_CH0_AWVALID(1'b0),
    .I_CH0_AWREADY(gmem0_0_AWREADY),
    .I_CH0_AWADDR(64'd0),
    .I_CH0_AWLEN(32'd0),
    .I_CH0_WVALID(1'b0),
    .I_CH0_WREADY(gmem0_0_WREADY),
    .I_CH0_WDATA(32'd0),
    .I_CH0_WSTRB(4'd0),
    .I_CH0_BVALID(gmem0_0_BVALID),
    .I_CH0_BREADY(1'b0)
);

krnl_vmul_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 70 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 0 ))
gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(load_input_1_U0_m_axi_gmem1_0_ARVALID),
    .I_CH0_ARREADY(gmem1_0_ARREADY),
    .I_CH0_ARADDR(load_input_1_U0_m_axi_gmem1_0_ARADDR),
    .I_CH0_ARLEN(load_input_1_U0_m_axi_gmem1_0_ARLEN),
    .I_CH0_RVALID(gmem1_0_RVALID),
    .I_CH0_RREADY(load_input_1_U0_m_axi_gmem1_0_RREADY),
    .I_CH0_RDATA(gmem1_0_RDATA),
    .I_CH0_RFIFONUM(gmem1_0_RFIFONUM),
    .I_CH0_AWVALID(1'b0),
    .I_CH0_AWREADY(gmem1_0_AWREADY),
    .I_CH0_AWADDR(64'd0),
    .I_CH0_AWLEN(32'd0),
    .I_CH0_WVALID(1'b0),
    .I_CH0_WREADY(gmem1_0_WREADY),
    .I_CH0_WDATA(32'd0),
    .I_CH0_WSTRB(4'd0),
    .I_CH0_BVALID(gmem1_0_BVALID),
    .I_CH0_BREADY(1'b0)
);

krnl_vmul_gmem2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 67 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 0 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(1'b0),
    .I_CH0_ARREADY(gmem2_0_ARREADY),
    .I_CH0_ARADDR(64'd0),
    .I_CH0_ARLEN(32'd0),
    .I_CH0_RVALID(gmem2_0_RVALID),
    .I_CH0_RREADY(1'b0),
    .I_CH0_RDATA(gmem2_0_RDATA),
    .I_CH0_RFIFONUM(gmem2_0_RFIFONUM),
    .I_CH0_AWVALID(store_output_U0_m_axi_gmem2_0_AWVALID),
    .I_CH0_AWREADY(gmem2_0_AWREADY),
    .I_CH0_AWADDR(store_output_U0_m_axi_gmem2_0_AWADDR),
    .I_CH0_AWLEN(store_output_U0_m_axi_gmem2_0_AWLEN),
    .I_CH0_WVALID(store_output_U0_m_axi_gmem2_0_WVALID),
    .I_CH0_WREADY(gmem2_0_WREADY),
    .I_CH0_WDATA(store_output_U0_m_axi_gmem2_0_WDATA),
    .I_CH0_WSTRB(store_output_U0_m_axi_gmem2_0_WSTRB),
    .I_CH0_BVALID(gmem2_0_BVALID),
    .I_CH0_BREADY(store_output_U0_m_axi_gmem2_0_BREADY)
);

krnl_vmul_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_store_output_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .out_r(out_r),
    .out_r_c_din(entry_proc_U0_out_r_c_din),
    .out_r_c_full_n(out_r_c_full_n),
    .out_r_c_write(entry_proc_U0_out_r_c_write),
    .out_r_c_num_data_valid(out_r_c_num_data_valid),
    .out_r_c_fifo_cap(out_r_c_fifo_cap)
);

krnl_vmul_load_input load_input_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load_input_U0_ap_start),
    .start_full_n(start_for_execute_U0_full_n),
    .ap_done(load_input_U0_ap_done),
    .ap_continue(load_input_U0_ap_continue),
    .ap_idle(load_input_U0_ap_idle),
    .ap_ready(load_input_U0_ap_ready),
    .start_out(load_input_U0_start_out),
    .start_write(load_input_U0_start_write),
    .m_axi_gmem0_0_AWVALID(load_input_U0_m_axi_gmem0_0_AWVALID),
    .m_axi_gmem0_0_AWREADY(1'b0),
    .m_axi_gmem0_0_AWADDR(load_input_U0_m_axi_gmem0_0_AWADDR),
    .m_axi_gmem0_0_AWID(load_input_U0_m_axi_gmem0_0_AWID),
    .m_axi_gmem0_0_AWLEN(load_input_U0_m_axi_gmem0_0_AWLEN),
    .m_axi_gmem0_0_AWSIZE(load_input_U0_m_axi_gmem0_0_AWSIZE),
    .m_axi_gmem0_0_AWBURST(load_input_U0_m_axi_gmem0_0_AWBURST),
    .m_axi_gmem0_0_AWLOCK(load_input_U0_m_axi_gmem0_0_AWLOCK),
    .m_axi_gmem0_0_AWCACHE(load_input_U0_m_axi_gmem0_0_AWCACHE),
    .m_axi_gmem0_0_AWPROT(load_input_U0_m_axi_gmem0_0_AWPROT),
    .m_axi_gmem0_0_AWQOS(load_input_U0_m_axi_gmem0_0_AWQOS),
    .m_axi_gmem0_0_AWREGION(load_input_U0_m_axi_gmem0_0_AWREGION),
    .m_axi_gmem0_0_AWUSER(load_input_U0_m_axi_gmem0_0_AWUSER),
    .m_axi_gmem0_0_WVALID(load_input_U0_m_axi_gmem0_0_WVALID),
    .m_axi_gmem0_0_WREADY(1'b0),
    .m_axi_gmem0_0_WDATA(load_input_U0_m_axi_gmem0_0_WDATA),
    .m_axi_gmem0_0_WSTRB(load_input_U0_m_axi_gmem0_0_WSTRB),
    .m_axi_gmem0_0_WLAST(load_input_U0_m_axi_gmem0_0_WLAST),
    .m_axi_gmem0_0_WID(load_input_U0_m_axi_gmem0_0_WID),
    .m_axi_gmem0_0_WUSER(load_input_U0_m_axi_gmem0_0_WUSER),
    .m_axi_gmem0_0_ARVALID(load_input_U0_m_axi_gmem0_0_ARVALID),
    .m_axi_gmem0_0_ARREADY(gmem0_0_ARREADY),
    .m_axi_gmem0_0_ARADDR(load_input_U0_m_axi_gmem0_0_ARADDR),
    .m_axi_gmem0_0_ARID(load_input_U0_m_axi_gmem0_0_ARID),
    .m_axi_gmem0_0_ARLEN(load_input_U0_m_axi_gmem0_0_ARLEN),
    .m_axi_gmem0_0_ARSIZE(load_input_U0_m_axi_gmem0_0_ARSIZE),
    .m_axi_gmem0_0_ARBURST(load_input_U0_m_axi_gmem0_0_ARBURST),
    .m_axi_gmem0_0_ARLOCK(load_input_U0_m_axi_gmem0_0_ARLOCK),
    .m_axi_gmem0_0_ARCACHE(load_input_U0_m_axi_gmem0_0_ARCACHE),
    .m_axi_gmem0_0_ARPROT(load_input_U0_m_axi_gmem0_0_ARPROT),
    .m_axi_gmem0_0_ARQOS(load_input_U0_m_axi_gmem0_0_ARQOS),
    .m_axi_gmem0_0_ARREGION(load_input_U0_m_axi_gmem0_0_ARREGION),
    .m_axi_gmem0_0_ARUSER(load_input_U0_m_axi_gmem0_0_ARUSER),
    .m_axi_gmem0_0_RVALID(gmem0_0_RVALID),
    .m_axi_gmem0_0_RREADY(load_input_U0_m_axi_gmem0_0_RREADY),
    .m_axi_gmem0_0_RDATA(gmem0_0_RDATA),
    .m_axi_gmem0_0_RLAST(gmem0_0_RLAST),
    .m_axi_gmem0_0_RID(gmem0_0_RID),
    .m_axi_gmem0_0_RFIFONUM(gmem0_0_RFIFONUM),
    .m_axi_gmem0_0_RUSER(gmem0_0_RUSER),
    .m_axi_gmem0_0_RRESP(gmem0_0_RRESP),
    .m_axi_gmem0_0_BVALID(1'b0),
    .m_axi_gmem0_0_BREADY(load_input_U0_m_axi_gmem0_0_BREADY),
    .m_axi_gmem0_0_BRESP(2'd0),
    .m_axi_gmem0_0_BID(1'd0),
    .m_axi_gmem0_0_BUSER(1'd0),
    .in_r(A),
    .size(size),
    .size_c_din(load_input_U0_size_c_din),
    .size_c_full_n(size_c_full_n),
    .size_c_write(load_input_U0_size_c_write),
    .size_c_num_data_valid(size_c_num_data_valid),
    .size_c_fifo_cap(size_c_fifo_cap),
    .inStream_A_din(load_input_U0_inStream_A_din),
    .inStream_A_full_n(inStream_A_full_n),
    .inStream_A_write(load_input_U0_inStream_A_write),
    .inStream_A_num_data_valid(inStream_A_num_data_valid),
    .inStream_A_fifo_cap(inStream_A_fifo_cap)
);

krnl_vmul_load_input_1 load_input_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load_input_1_U0_ap_start),
    .ap_done(load_input_1_U0_ap_done),
    .ap_continue(load_input_1_U0_ap_continue),
    .ap_idle(load_input_1_U0_ap_idle),
    .ap_ready(load_input_1_U0_ap_ready),
    .m_axi_gmem1_0_AWVALID(load_input_1_U0_m_axi_gmem1_0_AWVALID),
    .m_axi_gmem1_0_AWREADY(1'b0),
    .m_axi_gmem1_0_AWADDR(load_input_1_U0_m_axi_gmem1_0_AWADDR),
    .m_axi_gmem1_0_AWID(load_input_1_U0_m_axi_gmem1_0_AWID),
    .m_axi_gmem1_0_AWLEN(load_input_1_U0_m_axi_gmem1_0_AWLEN),
    .m_axi_gmem1_0_AWSIZE(load_input_1_U0_m_axi_gmem1_0_AWSIZE),
    .m_axi_gmem1_0_AWBURST(load_input_1_U0_m_axi_gmem1_0_AWBURST),
    .m_axi_gmem1_0_AWLOCK(load_input_1_U0_m_axi_gmem1_0_AWLOCK),
    .m_axi_gmem1_0_AWCACHE(load_input_1_U0_m_axi_gmem1_0_AWCACHE),
    .m_axi_gmem1_0_AWPROT(load_input_1_U0_m_axi_gmem1_0_AWPROT),
    .m_axi_gmem1_0_AWQOS(load_input_1_U0_m_axi_gmem1_0_AWQOS),
    .m_axi_gmem1_0_AWREGION(load_input_1_U0_m_axi_gmem1_0_AWREGION),
    .m_axi_gmem1_0_AWUSER(load_input_1_U0_m_axi_gmem1_0_AWUSER),
    .m_axi_gmem1_0_WVALID(load_input_1_U0_m_axi_gmem1_0_WVALID),
    .m_axi_gmem1_0_WREADY(1'b0),
    .m_axi_gmem1_0_WDATA(load_input_1_U0_m_axi_gmem1_0_WDATA),
    .m_axi_gmem1_0_WSTRB(load_input_1_U0_m_axi_gmem1_0_WSTRB),
    .m_axi_gmem1_0_WLAST(load_input_1_U0_m_axi_gmem1_0_WLAST),
    .m_axi_gmem1_0_WID(load_input_1_U0_m_axi_gmem1_0_WID),
    .m_axi_gmem1_0_WUSER(load_input_1_U0_m_axi_gmem1_0_WUSER),
    .m_axi_gmem1_0_ARVALID(load_input_1_U0_m_axi_gmem1_0_ARVALID),
    .m_axi_gmem1_0_ARREADY(gmem1_0_ARREADY),
    .m_axi_gmem1_0_ARADDR(load_input_1_U0_m_axi_gmem1_0_ARADDR),
    .m_axi_gmem1_0_ARID(load_input_1_U0_m_axi_gmem1_0_ARID),
    .m_axi_gmem1_0_ARLEN(load_input_1_U0_m_axi_gmem1_0_ARLEN),
    .m_axi_gmem1_0_ARSIZE(load_input_1_U0_m_axi_gmem1_0_ARSIZE),
    .m_axi_gmem1_0_ARBURST(load_input_1_U0_m_axi_gmem1_0_ARBURST),
    .m_axi_gmem1_0_ARLOCK(load_input_1_U0_m_axi_gmem1_0_ARLOCK),
    .m_axi_gmem1_0_ARCACHE(load_input_1_U0_m_axi_gmem1_0_ARCACHE),
    .m_axi_gmem1_0_ARPROT(load_input_1_U0_m_axi_gmem1_0_ARPROT),
    .m_axi_gmem1_0_ARQOS(load_input_1_U0_m_axi_gmem1_0_ARQOS),
    .m_axi_gmem1_0_ARREGION(load_input_1_U0_m_axi_gmem1_0_ARREGION),
    .m_axi_gmem1_0_ARUSER(load_input_1_U0_m_axi_gmem1_0_ARUSER),
    .m_axi_gmem1_0_RVALID(gmem1_0_RVALID),
    .m_axi_gmem1_0_RREADY(load_input_1_U0_m_axi_gmem1_0_RREADY),
    .m_axi_gmem1_0_RDATA(gmem1_0_RDATA),
    .m_axi_gmem1_0_RLAST(gmem1_0_RLAST),
    .m_axi_gmem1_0_RID(gmem1_0_RID),
    .m_axi_gmem1_0_RFIFONUM(gmem1_0_RFIFONUM),
    .m_axi_gmem1_0_RUSER(gmem1_0_RUSER),
    .m_axi_gmem1_0_RRESP(gmem1_0_RRESP),
    .m_axi_gmem1_0_BVALID(1'b0),
    .m_axi_gmem1_0_BREADY(load_input_1_U0_m_axi_gmem1_0_BREADY),
    .m_axi_gmem1_0_BRESP(2'd0),
    .m_axi_gmem1_0_BID(1'd0),
    .m_axi_gmem1_0_BUSER(1'd0),
    .inStream_B_din(load_input_1_U0_inStream_B_din),
    .inStream_B_full_n(inStream_B_full_n),
    .inStream_B_write(load_input_1_U0_inStream_B_write),
    .inStream_B_num_data_valid(inStream_B_num_data_valid),
    .inStream_B_fifo_cap(inStream_B_fifo_cap),
    .in_r(B),
    .size(size)
);

krnl_vmul_execute execute_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(execute_U0_ap_start),
    .ap_done(execute_U0_ap_done),
    .ap_continue(execute_U0_ap_continue),
    .ap_idle(execute_U0_ap_idle),
    .ap_ready(execute_U0_ap_ready),
    .size_dout(size_c_dout),
    .size_empty_n(size_c_empty_n),
    .size_read(execute_U0_size_read),
    .size_num_data_valid(size_c_num_data_valid),
    .size_fifo_cap(size_c_fifo_cap),
    .inStream_A_dout(inStream_A_dout),
    .inStream_A_empty_n(inStream_A_empty_n),
    .inStream_A_read(execute_U0_inStream_A_read),
    .inStream_A_num_data_valid(inStream_A_num_data_valid),
    .inStream_A_fifo_cap(inStream_A_fifo_cap),
    .inStream_B_dout(inStream_B_dout),
    .inStream_B_empty_n(inStream_B_empty_n),
    .inStream_B_read(execute_U0_inStream_B_read),
    .inStream_B_num_data_valid(inStream_B_num_data_valid),
    .inStream_B_fifo_cap(inStream_B_fifo_cap),
    .outStream_din(execute_U0_outStream_din),
    .outStream_full_n(outStream_full_n),
    .outStream_write(execute_U0_outStream_write),
    .outStream_num_data_valid(outStream_num_data_valid),
    .outStream_fifo_cap(outStream_fifo_cap)
);

krnl_vmul_store_output store_output_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(store_output_U0_ap_start),
    .ap_done(store_output_U0_ap_done),
    .ap_continue(store_output_U0_ap_continue),
    .ap_idle(store_output_U0_ap_idle),
    .ap_ready(store_output_U0_ap_ready),
    .m_axi_gmem2_0_AWVALID(store_output_U0_m_axi_gmem2_0_AWVALID),
    .m_axi_gmem2_0_AWREADY(gmem2_0_AWREADY),
    .m_axi_gmem2_0_AWADDR(store_output_U0_m_axi_gmem2_0_AWADDR),
    .m_axi_gmem2_0_AWID(store_output_U0_m_axi_gmem2_0_AWID),
    .m_axi_gmem2_0_AWLEN(store_output_U0_m_axi_gmem2_0_AWLEN),
    .m_axi_gmem2_0_AWSIZE(store_output_U0_m_axi_gmem2_0_AWSIZE),
    .m_axi_gmem2_0_AWBURST(store_output_U0_m_axi_gmem2_0_AWBURST),
    .m_axi_gmem2_0_AWLOCK(store_output_U0_m_axi_gmem2_0_AWLOCK),
    .m_axi_gmem2_0_AWCACHE(store_output_U0_m_axi_gmem2_0_AWCACHE),
    .m_axi_gmem2_0_AWPROT(store_output_U0_m_axi_gmem2_0_AWPROT),
    .m_axi_gmem2_0_AWQOS(store_output_U0_m_axi_gmem2_0_AWQOS),
    .m_axi_gmem2_0_AWREGION(store_output_U0_m_axi_gmem2_0_AWREGION),
    .m_axi_gmem2_0_AWUSER(store_output_U0_m_axi_gmem2_0_AWUSER),
    .m_axi_gmem2_0_WVALID(store_output_U0_m_axi_gmem2_0_WVALID),
    .m_axi_gmem2_0_WREADY(gmem2_0_WREADY),
    .m_axi_gmem2_0_WDATA(store_output_U0_m_axi_gmem2_0_WDATA),
    .m_axi_gmem2_0_WSTRB(store_output_U0_m_axi_gmem2_0_WSTRB),
    .m_axi_gmem2_0_WLAST(store_output_U0_m_axi_gmem2_0_WLAST),
    .m_axi_gmem2_0_WID(store_output_U0_m_axi_gmem2_0_WID),
    .m_axi_gmem2_0_WUSER(store_output_U0_m_axi_gmem2_0_WUSER),
    .m_axi_gmem2_0_ARVALID(store_output_U0_m_axi_gmem2_0_ARVALID),
    .m_axi_gmem2_0_ARREADY(1'b0),
    .m_axi_gmem2_0_ARADDR(store_output_U0_m_axi_gmem2_0_ARADDR),
    .m_axi_gmem2_0_ARID(store_output_U0_m_axi_gmem2_0_ARID),
    .m_axi_gmem2_0_ARLEN(store_output_U0_m_axi_gmem2_0_ARLEN),
    .m_axi_gmem2_0_ARSIZE(store_output_U0_m_axi_gmem2_0_ARSIZE),
    .m_axi_gmem2_0_ARBURST(store_output_U0_m_axi_gmem2_0_ARBURST),
    .m_axi_gmem2_0_ARLOCK(store_output_U0_m_axi_gmem2_0_ARLOCK),
    .m_axi_gmem2_0_ARCACHE(store_output_U0_m_axi_gmem2_0_ARCACHE),
    .m_axi_gmem2_0_ARPROT(store_output_U0_m_axi_gmem2_0_ARPROT),
    .m_axi_gmem2_0_ARQOS(store_output_U0_m_axi_gmem2_0_ARQOS),
    .m_axi_gmem2_0_ARREGION(store_output_U0_m_axi_gmem2_0_ARREGION),
    .m_axi_gmem2_0_ARUSER(store_output_U0_m_axi_gmem2_0_ARUSER),
    .m_axi_gmem2_0_RVALID(1'b0),
    .m_axi_gmem2_0_RREADY(store_output_U0_m_axi_gmem2_0_RREADY),
    .m_axi_gmem2_0_RDATA(32'd0),
    .m_axi_gmem2_0_RLAST(1'b0),
    .m_axi_gmem2_0_RID(1'd0),
    .m_axi_gmem2_0_RFIFONUM(9'd0),
    .m_axi_gmem2_0_RUSER(1'd0),
    .m_axi_gmem2_0_RRESP(2'd0),
    .m_axi_gmem2_0_BVALID(gmem2_0_BVALID),
    .m_axi_gmem2_0_BREADY(store_output_U0_m_axi_gmem2_0_BREADY),
    .m_axi_gmem2_0_BRESP(gmem2_0_BRESP),
    .m_axi_gmem2_0_BID(gmem2_0_BID),
    .m_axi_gmem2_0_BUSER(gmem2_0_BUSER),
    .out_r_dout(out_r_c_dout),
    .out_r_empty_n(out_r_c_empty_n),
    .out_r_read(store_output_U0_out_r_read),
    .out_r_num_data_valid(out_r_c_num_data_valid),
    .out_r_fifo_cap(out_r_c_fifo_cap),
    .outStream_dout(outStream_dout),
    .outStream_empty_n(outStream_empty_n),
    .outStream_read(store_output_U0_outStream_read),
    .outStream_num_data_valid(outStream_num_data_valid),
    .outStream_fifo_cap(outStream_fifo_cap)
);

krnl_vmul_fifo_w64_d4_S out_r_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_out_r_c_din),
    .if_full_n(out_r_c_full_n),
    .if_write(entry_proc_U0_out_r_c_write),
    .if_dout(out_r_c_dout),
    .if_empty_n(out_r_c_empty_n),
    .if_read(store_output_U0_out_r_read),
    .if_num_data_valid(out_r_c_num_data_valid),
    .if_fifo_cap(out_r_c_fifo_cap)
);

krnl_vmul_fifo_w32_d2_S size_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_input_U0_size_c_din),
    .if_full_n(size_c_full_n),
    .if_write(load_input_U0_size_c_write),
    .if_dout(size_c_dout),
    .if_empty_n(size_c_empty_n),
    .if_read(execute_U0_size_read),
    .if_num_data_valid(size_c_num_data_valid),
    .if_fifo_cap(size_c_fifo_cap)
);

krnl_vmul_fifo_w32_d2_S inStream_A_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_input_U0_inStream_A_din),
    .if_full_n(inStream_A_full_n),
    .if_write(load_input_U0_inStream_A_write),
    .if_dout(inStream_A_dout),
    .if_empty_n(inStream_A_empty_n),
    .if_read(execute_U0_inStream_A_read),
    .if_num_data_valid(inStream_A_num_data_valid),
    .if_fifo_cap(inStream_A_fifo_cap)
);

krnl_vmul_fifo_w32_d2_S inStream_B_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_input_1_U0_inStream_B_din),
    .if_full_n(inStream_B_full_n),
    .if_write(load_input_1_U0_inStream_B_write),
    .if_dout(inStream_B_dout),
    .if_empty_n(inStream_B_empty_n),
    .if_read(execute_U0_inStream_B_read),
    .if_num_data_valid(inStream_B_num_data_valid),
    .if_fifo_cap(inStream_B_fifo_cap)
);

krnl_vmul_fifo_w32_d2_S outStream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(execute_U0_outStream_din),
    .if_full_n(outStream_full_n),
    .if_write(execute_U0_outStream_write),
    .if_dout(outStream_dout),
    .if_empty_n(outStream_empty_n),
    .if_read(store_output_U0_outStream_read),
    .if_num_data_valid(outStream_num_data_valid),
    .if_fifo_cap(outStream_fifo_cap)
);

krnl_vmul_start_for_store_output_U0 start_for_store_output_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store_output_U0_din),
    .if_full_n(start_for_store_output_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_store_output_U0_dout),
    .if_empty_n(start_for_store_output_U0_empty_n),
    .if_read(store_output_U0_ap_ready)
);

krnl_vmul_start_for_execute_U0 start_for_execute_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_execute_U0_din),
    .if_full_n(start_for_execute_U0_full_n),
    .if_write(load_input_U0_start_write),
    .if_dout(start_for_execute_U0_dout),
    .if_empty_n(start_for_execute_U0_empty_n),
    .if_read(execute_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_load_input_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_input_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_input_1_U0_ap_ready <= ap_sync_load_input_1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_load_input_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_input_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_input_U0_ap_ready <= ap_sync_load_input_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

assign ap_done = store_output_U0_ap_done;

assign ap_idle = (store_output_U0_ap_idle & load_input_U0_ap_idle & load_input_1_U0_ap_idle & execute_U0_ap_idle & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_load_input_1_U0_ap_ready = (load_input_1_U0_ap_ready | ap_sync_reg_load_input_1_U0_ap_ready);

assign ap_sync_load_input_U0_ap_ready = (load_input_U0_ap_ready | ap_sync_reg_load_input_U0_ap_ready);

assign ap_sync_ready = (ap_sync_load_input_U0_ap_ready & ap_sync_load_input_1_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign execute_U0_ap_continue = 1'b1;

assign execute_U0_ap_start = start_for_execute_U0_empty_n;

assign gmem0_0_RID = 1'd0;

assign gmem0_0_RLAST = 1'b0;

assign gmem0_0_RRESP = 2'd0;

assign gmem0_0_RUSER = 1'd0;

assign gmem1_0_RID = 1'd0;

assign gmem1_0_RLAST = 1'b0;

assign gmem1_0_RRESP = 2'd0;

assign gmem1_0_RUSER = 1'd0;

assign gmem2_0_BID = 1'd0;

assign gmem2_0_BRESP = 2'd0;

assign gmem2_0_BUSER = 1'd0;

assign load_input_1_U0_ap_continue = 1'b1;

assign load_input_1_U0_ap_start = ((ap_sync_reg_load_input_1_U0_ap_ready ^ 1'b1) & ap_start);

assign load_input_U0_ap_continue = 1'b1;

assign load_input_U0_ap_start = ((ap_sync_reg_load_input_U0_ap_ready ^ 1'b1) & ap_start);

assign start_for_execute_U0_din = 1'b1;

assign start_for_store_output_U0_din = 1'b1;

assign store_output_U0_ap_continue = ap_continue;

assign store_output_U0_ap_start = start_for_store_output_U0_empty_n;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "krnl_vmul_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //krnl_vmul

